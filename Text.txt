using System;


class Program
{

    public static int count = 0;

    public static int HITCOUNT = 0;
    static int[,] dir = { { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 }, { 1, 0 }, { 0, 1 }, { -1, 0 }, { 0, -1 } };

    


    static void Main(string[] args)
    {

        int n = 8;

        //for (int i = 1; i < 13; i++)
        //{
        //    HITCOUNT = 0;

        //    int[,] board = new int[i, i];

        //    //first

        //    for (int j = 0; j < i; j++)
        //    {
        //        SelectQuean(0, j, board);

        //    }

        //    // seconde

        //    //if (i % 2 == 0)
        //    //{

        //    //    for (int j = 0; j < i / 2 - 1; j++)
        //    //    {
        //    //        SelectQuean(0, j, board);

        //    //    }
        //    //    HITCOUNT *= 2;

        //    //}
        //    //else
        //    //{
        //    //    for (int j = 0; j < i / 2; j++)
        //    //    {
        //    //        SelectQuean(0, j, board);

        //    //    }
        //    //    HITCOUNT *= 2;

        //    //    SelectQuean(0, i / 2 + 1, board);

        //    //}

        //    Console.WriteLine(i + "HIT! : " + HITCOUNT);


        //}



        for (int j = 0; j < 15; j++)
        {
            HITCOUNT = 0;
            int[,] board = new int[j, j];
            SelectQuean(0, 0, board);
            Console.WriteLine(j + " : " + "HIT! : " + HITCOUNT);

        }

        //HITCOUNT = 0;
        //int[,] board = new int[4, 4];
        //SelectQuean(0, 0, board);
        //Console.WriteLine(4 + " : " + "HIT! : " + HITCOUNT);



    }

    static void Draw(int y, int x, int[,] board, int draw)
    {
        int size = board.GetLength(0);

        board[y, x] += draw;

        for (int i = 1; i < size; i++)
        {
            for (int j = 0; j < 8; j++)
            {
                int dirY = dir[j, 0] * i;
                int dirX = dir[j, 1] * i;

                dirY = y + dirY;
                dirX = x + dirX;

                if (0 <= dirY && dirY < size && 0 <= dirX && dirX < size)
                {
                    board[dirY, dirX] += draw;
                }
            }
        }


    }
    static void Show(int y, int x, int[,] board)
    {
        int size = board.GetLength(0);

        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                if (i == y && j == x)
                    Console.Write("â˜…" + "  ");
                else
                    Console.Write(board[i, j] + "  ");
            }
            Console.WriteLine();
        }


    }


    // First

    static void SelectQuean(int y, int x, int[,] board)
    {

        //Console.WriteLine();
        int size = board.GetLength(0);

        //Draw One


        //Show

        //Console.WriteLine();



        for (int i = y; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                if (board[i, j] == 0)
                {
                    if (count != i)
                    {
                        return;
                    }

                    count++;

                    Draw(i, j, board, 1);

                    //Show(i, j, board);
                    //Console.WriteLine("Y : " + i + " , " + "X : " + x + " Depth : " + i + " Count : " + count);

                    if (count == size)
                    {

                        HITCOUNT++;
                        //Console.WriteLine("HIT!!! : : " + HITCOUNT);

                    }

                    SelectQuean(i + 1, j, board);

                    //Console.WriteLine("BACK");

                    Draw(i, j, board, -1);
                    count--;

                }




            }
        }





    }

    // New
    //static void SelectQuean(int y, int x, int[,] board)
    //{

    //    //Console.WriteLine();
    //    int size = board.GetLength(0);

    //    //Draw One


    //    //Show

    //    //Console.WriteLine();




    //    //for (int j = 0; j < size; j++)
    //    //{



    //    //    if (board[y, j] == 0)
    //    //    {
    //    //        if (count != x)
    //    //        {
    //    //            return;
    //    //        }

    //    //        count++;

    //    //        Draw(x, j, board, 1);

    //    //        Show(i, j, board);
    //    //        Console.WriteLine("Y : " + y + " , " + "X : " + x + " Depth : " + i + " Count : " + count);

    //    //        if (count == size)
    //    //        {

    //    //            HITCOUNT++;

    //    //        }

    //    //        SelectQuean(x + 1, j, board);

    //    //        //Console.WriteLine("BACK");

    //    //        Draw(x, j, board, -1);
    //    //        count--;

    //    //    }




    //    //}






    //}



}

